<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mininet]]></title>
  <link href="http://mininet.org/atom.xml" rel="self"/>
  <link href="http://mininet.org/"/>
  <updated>2022-04-01T15:18:11-07:00</updated>
  <id>http://mininet.org/</id>
  <author>
    <name><![CDATA[Mininet Project Contributors]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Announcing Mininet 2.3.0 !]]></title>
    <link href="http://mininet.org/blog/2021/02/28/announcing-mininet-2-3-0/"/>
    <updated>2021-02-28T17:50:37-08:00</updated>
    <id>http://mininet.org/blog/2021/02/28/announcing-mininet-2-3-0</id>
    <content type="html"><![CDATA[<p>We are pleased to announce
<strong><a href="https://github.com/mininet/mininet/releases/tag/2.3.0">Mininet 2.3.0</a></strong> !</p>

<p>This release provides a number of bug fixes as well as new features,
including support for <strong>Python 3</strong> (as well Python 2) and installation
from source on Ubuntu 20.04 LTS as well as Debian 10+.</p>

<p>Please check out additional details on the Mininet 2.3.0 release in the
<strong><a href="https://github.com/mininet/mininet/wiki/Mininet-2.3.0-Release-Notes">release notes</a></strong>
on <a href="http://docs.mininet.org#mininet-release-notes">docs.mininet.org</a>.</p>

<h4 id="how-to-get-starteddownload"><a href="http://mininet.org/download">How to Get Started</a></h4>

<ul>
  <li>
    <p>The easiest way to get started with Mininet is to download a VM
image. See <strong><a href="http://mininet.org/download">Download</a></strong> for details.</p>
  </li>
  <li>
    <p>The latest Mininet source code is available on
<a href="https://github.com/mininet/mininet">GitHub</a> and also via
<a href="http://code.mininet.org">code.mininet.org</a>.</p>
  </li>
</ul>

<p>Mininet is an <a href="http://code.mininet.org">open source project</a>,
and we are grateful to our many
code contributors, bug reporters, and active users who continue to
help make Mininet a useful system with a friendly and helpful
community.</p>

<p>We look forward to seeing what you will do to
transform and improve the networking world.</p>

<p>Have fun with Mininet!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mininet Wins ACM SIGCOMM Test of Time Paper Award]]></title>
    <link href="http://mininet.org/blog/2020/06/29/mininet-paper-wins-sigcomm-test-of-time-award/"/>
    <updated>2020-06-29T17:23:04-08:00</updated>
    <id>http://mininet.org/blog/2020/06/29/mininet-paper-wins-sigcomm-test-of-time-award</id>
    <content type="html"><![CDATA[<p>We are pleased to announce that our original HotNets paper,
<a href="http://conferences.sigcomm.org/hotnets/2010/papers/a19-lantz.pdf">A Network in a Laptop: Rapid Prototyping for Software-Defined Networks</a>, has won the
<a href="http://www.sigcomm.org/awards/test-of-time-paper-award">ACM SIGCOMM Test of Time Paper Award</a>.</p>

<p>Congratulations to the authors, Bob Lantz, Brandon Heller, and Nick
McKeown, and congratulations and thanks to the many researchers,
teachers, students, users, collaborators, and project contributors who
have used and continue to use Mininet to help usher in the SDN
revolution and improve the practice of computer networking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Congrats to Mininet SIGCOMM Hackathon Winners!]]></title>
    <link href="http://mininet.org/blog/2018/08/27/sigcomm2018-hackathon-winners/"/>
    <updated>2018-08-27T15:39:00-07:00</updated>
    <id>http://mininet.org/blog/2018/08/27/sigcomm2018-hackathon-winners</id>
    <content type="html"><![CDATA[<p>Congratulations to Alexander Jung, Michał Król and Torsten Runge, who
prototyped a Mininet node class for launching unikernels - small
application-specific kernel images, basically an application linked
with a library OS, ClickOS being one example - and ended up placing in
the SIGCOMM 2018 Hackathon!</p>

<p><a href="http://conferences.sigcomm.org/sigcomm/2018/hackathon.html">http://conferences.sigcomm.org/sigcomm/2018/hackathon.html</a></p>

<p>In their case they used Rumprun as the unikernel system and qemu/kvm
to launch it:</p>

<ul>
  <li><a href="http://github.com/nderjung/mininet">http://github.com/nderjung/mininet</a> (Branch: <code>devel/rump</code>)</li>
  <li><a href="http://github.com/rumpkernel/rumprun/">http://github.com/rumpkernel/rumprun/</a></li>
  <li><a href="http://unikernel.org">http://unikernel.org</a></li>
</ul>

<p>They are planning on continuing to work on it, so I hope we can get something
simple and useful running and perhaps added to Mininet!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open Networking Foundation Promotes Mininet]]></title>
    <link href="http://mininet.org/blog/2017/06/30/open-networking-foundation-promotes-mininet/"/>
    <updated>2017-06-30T14:26:00-07:00</updated>
    <id>http://mininet.org/blog/2017/06/30/open-networking-foundation-promotes-mininet</id>
    <content type="html"><![CDATA[<p>In case you missed it, here is the <a href="https://www.opennetworking.org/news-and-events/blog/project-mininet-winner-of-inaugural-acm-sigcomm-sosr-software-systems-award/">blog post on Mininet</a> on the
<a href="https://opennetworking.org">Open Networking Foundation</a> web site:</p>

<p><a href="https://www.opennetworking.org/news-and-events/blog/project-mininet-winner-of-inaugural-acm-sigcomm-sosr-software-systems-award/">https://www.opennetworking.org/news-and-events/blog/project-mininet-winner-of-inaugural-acm-sigcomm-sosr-software-systems-award/</a></p>

<p>There is an amusing embedded video as well.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mininet Wins ACM SIGCOMM SOSR Software Systems Award !]]></title>
    <link href="http://mininet.org/blog/2017/04/05/mininet-wins-sosr-systems-award/"/>
    <updated>2017-04-05T11:04:00-07:00</updated>
    <id>http://mininet.org/blog/2017/04/05/mininet-wins-sosr-systems-award</id>
    <content type="html"><![CDATA[<p>We are pleased to announce that <strong>Mininet has won the
<a href="http://conferences.sigcomm.org/sosr/2017/award.html">ACM SIGCOMM SOSR Software Systems Award</a>!</strong></p>

<blockquote>
  <p>“The ACM SIGCOMM SOSR Software Systems Award is given to an individual
or an institution to recognize the development of a software system
that has had a significant impact on SDN research, implementations,
and tools. The impact may be reflected in the widespread adoption of
the system, or of its underlying concepts, by the wider SDN community,
either in research projects, in the open-source community, or
commercially.”</p>
</blockquote>

<p>The award also includes an invited talk, and the talk slides may be found
<a href="https://github.com/mininet/mininet/wiki/Publications#presentations-and-slides">here</a>.</p>

<p>The SOSR 2017 program and proceedings may be found <a href="http://conferences.sigcomm.org/sosr/2017/program.html">here</a>.</p>

<p><strong>Mininet’s ongoing success and impact would not be possible without the
support and contributions from the Mininet community, so we’d like to
take this opportunity to thank everyone and to say that we look
forward to working together to continue to make Mininet a better and
more useful system!</strong></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mininet VM Security Advisory]]></title>
    <link href="http://mininet.org/blog/2017/03/21/mininet-vm-security-advisory/"/>
    <updated>2017-03-21T16:29:00-07:00</updated>
    <id>http://mininet.org/blog/2017/03/21/mininet-vm-security-advisory</id>
    <content type="html"><![CDATA[<p>Unfortunately, installing the Ubuntu SSH package into a VM image causes default SSH keys to be generated. In the case of the Mininet VM, this means that the VM images for Mininet 2.2.1 and earlier included the same set of default SSH keys (which could leave you open to a MITM attack.) This probably isn’t surprising to many of you, but we’re changing it in the Mininet VM images to avoid this issue.</p>

<p>As of Mininet 2.2.2, we no longer ship default SSH keys in the provided Mininet VM; we remove them before upload, and new SSH keys should be generated the first time you boot a Mininet 2.2.2 VM image.</p>

<p>If you are logging into an older Mininet VM over the internet or another non-secure network, we highly recommend regenerating your SSH keys if you haven’t done so already:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo rm -f /etc/ssh/*key*
</span><span class="line">sudo /usr/sbin/dpkg-reconfigure openssh-server
</span><span class="line">sudo service ssh restart</span></code></pre></td></tr></table></div></figure>

<p>Alternately, you are welcome to download a new Mininet 2.2.2 VM image.</p>

<p>If you’re distributing a VM image for any purpose, we recommend removing any SSH keys before uploading it!</p>

<p>Additional information on Mininet 2.2.2 may be found at
<a href="http://mininet.org/blog/2017/03/17/announcing-mininet-2-2-2/">http://mininet.org/blog/2017/03/17/announcing-mininet-2-2-2/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Announcing Mininet 2.2.2]]></title>
    <link href="http://mininet.org/blog/2017/03/17/announcing-mininet-2-2-2/"/>
    <updated>2017-03-17T00:48:00-07:00</updated>
    <id>http://mininet.org/blog/2017/03/17/announcing-mininet-2-2-2</id>
    <content type="html"><![CDATA[<p>Mininet 2.2.2 is primarily a performance improvement and bug fix release.</p>

<h3 id="security-advisory">Security Advisory!</h3>

<ul>
  <li>The Mininet VM images no longer ship with identical <code>ssh</code> keys. We recommend that you
destroy any default <code>ssh</code> keys in existing Mininet VMs if you haven’t already:</li>
</ul>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo rm -f /etc/ssh/*key*
</span><span class="line">sudo /usr/sbin/dpkg-reconfigure openssh-server
</span><span class="line">sudo service ssh restart</span></code></pre></td></tr></table></div></figure>

<h3 id="improvements-and-bug-fixes">Improvements and Bug Fixes</h3>

<ul>
  <li>We now run <a href="http://mininet.org/blog/2017/01/12/testing-using-travis-ci/">public CI builds via Travis</a></li>
  <li>Several common test failures have been addressed</li>
  <li>We use our own forked versions of <code>oflops</code> and the Stanford Reference
Switch/Controller</li>
  <li><code>install.sh</code> now has basic support for RHEL</li>
  <li><code>mnexec</code> now works on systemd systems</li>
  <li>The default OpenFlow port is now the official port of 6653 rather
than the classic port of 6633, which was nastily co-opted by Cisco.</li>
  <li>Several issues with the NAT element have been addressed</li>
</ul>

<h3 id="bugs-and-gotchas">Bugs and Gotchas</h3>

<ul>
  <li>Ubuntu 16.04 LTS (Xenial) kernel bug: the problem resulting
in <code>unregister_netdevice: waiting for lo to become free. Usage count
= 1</code> in the console or kernel log has returned. We recommend using 14.04
or an older kernel until this is fixed.</li>
  <li>Ryu installation with <code>install.sh -y</code> is still broken</li>
  <li>The <code>--tests</code> option is slightly different from mainline</li>
</ul>

<h3 id="release-notes-and-downloads">Release notes and Downloads</h3>

<p>Full release notes for this release and previous releases
may be found in the <strong><a href="https://github.com/mininet/mininet/wiki/Documentation#mininet-release-notes">Release Notes</a></strong>
on <a href="http://docs.mininet.org">docs.mininet.org</a>.</p>

<p>The easiest way to get started with Mininet is to download a
<strong><a href="http://mininet.org/download">VM image</a></strong>.</p>

<p>Download, installation, and upgrade instructions may be found at
<a href="http://mininet.org/download">http://mininet.org/download</a> .</p>

<p>The latest Mininet <strong><a href="http://code.mininet.org">source code</a></strong> is available on
<a href="[http://github.com/mininet/mininet">github</a> and also via
<a href="http://code.mininet.org">code.mininet.org</a>.</p>

<h3 id="acknowledgments">Acknowledgments</h3>

<p>Thanks to all of the contributors of fixes and enhancements for this
release, including Olivier Tilmans, Jono Hart, Tomasz Buchert, Rahman
Pujianto, Roan Huang, M S Vishwanath Bhat, Brian O’Connor, and others.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automated Testing Using Travis CI]]></title>
    <link href="http://mininet.org/blog/2017/01/12/testing-using-travis-ci/"/>
    <updated>2017-01-12T17:40:00-08:00</updated>
    <id>http://mininet.org/blog/2017/01/12/testing-using-travis-ci</id>
    <content type="html"><![CDATA[<p>Mininet is now using Travis CI for automated testing!</p>

<p>Whenever code is pushed to Mininet, Travis CI starts a test job
that installs Mininet, runs a simple sanity test, and the “quick”
tests for HiFi, the walkthrough, and the example code.</p>

<p>The full results are available on
<a href="https://travis-ci.org/mininet/mininet">Travis CI’s Mininet page</a>,
and the status of the most recent master build is part of the README
on Github:</p>

<p><img src="http://mininet.org/images/travis-ci-readme.png" /></p>

<p>Travis CI also verifies all new pull requests and displays their
build status in the pull request discussion.</p>

<p>Mininet will continue to be tested in several ways on private servers,
but our hope is that having a public-facing CI will give members
of the community a better sense of how Mininet is tested and the quality
of the codebase.
Furthermore, we hope that by automatically testing pull requests, we
will reduce the likelihood of merging broken code and reduce the
testing burden on maintainers.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Announcing Mininet 2.2.1]]></title>
    <link href="http://mininet.org/blog/2015/04/16/announcing-mininet-2-2-1/"/>
    <updated>2015-04-16T18:03:00-07:00</updated>
    <id>http://mininet.org/blog/2015/04/16/announcing-mininet-2-2-1</id>
    <content type="html"><![CDATA[<p>Mininet 2.2.1 is primarily a performance improvement and bug fix release.</p>

<ul>
  <li>
    <p><strong>Batch startup</strong> has been implemented for Open vSwitch, improving
startup performance.</p>
  </li>
  <li>
    <p><strong>OVS patch links</strong> have been implemented via OVSLink and <code>--link ovs</code></p>

    <p>Warning! These links have <em>serious limitations</em> compared to
virtual Ethernet pairs: they are not attached to real Linux
interfaces so you cannot use <code>tcpdump</code> or <code>wireshark</code> with them;
they also cannot be used in long chains - we don’t recommend more
than 64 OVSLinks, for example <code>--linear,64</code>. However, they can offer
significantly better performance than veth pairs, for certain
configurations.</p>
  </li>
</ul>

<p>Also:</p>

<ul>
  <li>
    <p>You can now easily <strong>install Mininet on a <a href="http://raspberrypi.org">Raspberry Pi</a></strong>
(simply by using <code>install.sh -fnv</code> or <code>install.sh -a</code>)  ;-)</p>
  </li>
  <li>
    <p><code>mn</code> now accepts multiple <code>--controller</code> arguments</p>
  </li>
  <li>
    <p><code>--controller remote</code> and <code>RemoteController</code> now accept <code>ip</code> arguments
of the form <code>&lt;IP address&gt;:&lt;port&gt;</code> (in addition to <code>ip=&lt;IP&gt;,port=&lt;port&gt;</code>)</p>
  </li>
</ul>

<p>Additional information for this release and previous releases
may be found in the <strong><a href="https://github.com/mininet/mininet/wiki/Documentation#mininet-release-notes">Release Notes</a></strong>
on <a href="http://docs.mininet.org">docs.mininet.org</a>.</p>

<p>The easiest way to get started with Mininet is to download a
<strong><a href="http://mininet.org/download">VM image</a></strong>.</p>

<p>Download, installation, and upgrade instructions may be found at
<a href="http://mininet.org/download">http://mininet.org/download</a> .</p>

<p>The latest Mininet <strong><a href="http://code.mininet.org">source code</a></strong> is available on
<a href="[http://github.com/mininet/mininet">github</a> and also via
<a href="http://code.mininet.org">code.mininet.org</a>.</p>

<p>Thanks to all of the Mininet contributors! A number of interesting features
and improvements are already in the works for Mininet 2.3.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mininet on Raspberry Pi]]></title>
    <link href="http://mininet.org/blog/2015/04/15/mininet-on-raspberry-pi/"/>
    <updated>2015-04-15T14:52:00-07:00</updated>
    <id>http://mininet.org/blog/2015/04/15/mininet-on-raspberry-pi</id>
    <content type="html"><![CDATA[<p>Mininet is now easy to install on the Raspberry Pi running Debian/Raspbian 7 Wheezy!</p>

<p>Mininet’s <code>install.sh</code> has been updated so it should simply work:</p>

<pre><code>install.sh -fnv  ## basic install
install.sh -a    ## the works
</code></pre>

<p>Here is an example of <strong>Mininet running on a Raspberry Pi 2 model B</strong>:</p>

<p><img src="http://mininet.org/images/mininet-raspberry-pi-2.jpg" /></p>

<p>A Raspberry Pi can be used any time you need a cheap <strong>network-in-a-box</strong>, for example
for courses, laboratories, demonstrations, or simple experiments.</p>

<p>We look forward to hearing (on <code>mininet-discuss</code> and elsewhere) about interesting,
fun and clever uses of Mininet running on the Pi !!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Announcing Mininet 2.2.0 !]]></title>
    <link href="http://mininet.org/blog/2014/12/09/announcing-mininet-2-2-0/"/>
    <updated>2014-12-09T14:35:00-08:00</updated>
    <id>http://mininet.org/blog/2014/12/09/announcing-mininet-2-2-0</id>
    <content type="html"><![CDATA[<p>We are pleased to announce Mininet 2.2.0! This release  provides
a number of bug fixes as well as several new features, including:</p>

<ul>
  <li>
    <p>Improved OpenFlow 1.3 support</p>

    <ul>
      <li><code>mn --switch ovs,protocols=OpenFlow13</code> starts OVS in 1.3 mode</li>
      <li><code>install.sh -w</code> installs 1.3-compatible Wireshark dissector using
Loxigen
        <ul>
          <li><code>install.sh -y</code> installs the Ryu 1.3-compatible controller</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>A new <code>nodelib.py</code> node library, and new <code>Node</code> types including
<code>LinuxBridge</code>, <code>OVSBridge</code>, <code>LinuxRouter</code> (see <code>examples/</code>) and <code>NAT</code><br />
<img src="http://mininet.org/images/nodelib.png" /></p>
  </li>
  <li>
    <p>Easier LAN/internet connectivity from Mininet hosts</p>

    <ul>
      <li>
        <p><code>mn --nat</code> will semi-automatically connect a Mininet network
to your LAN using NAT, solving the “why can’t I ping
<a href="http://google.com">Google</a>?” problem.</p>

        <p><strong>Warning</strong>: By default this will reroute local
traffic originating at your Mininet server or VM and destined for
Mininet’s IP subnet (<code>10.0.0.0/8</code> by default) to the
Mininet network, which can break connectivity if you are using
addresses in the same range in your LAN. You can change this range
using the <code>--ipbase</code> option.</p>
      </li>
    </ul>
  </li>
  <li>
    <p>An improved MiniEdit GUI (<code>examples/miniedit.py</code>) - thanks to
Gregory Gee <br />
<img src="http://mininet.org/images/miniedit.png" /></p>
  </li>
  <li>
    <p>Support for multiple <code>--custom</code> arguments to <code>mn</code></p>

    <p><code>mn --custom mytopo.py,myswitch.py --topo mytopo --switch myswitch</code></p>
  </li>
  <li>
    <p>Experimental cluster support - consult the
<a href="http://docs.mininet.org">documentation</a> for details -
as well as <code>examples/cluster.py</code> and an experimental <code>--cluster</code>
option for topologies built with the default <code>Host</code> and <code>OVSSwitch</code>
classes:</p>

    <p><code>mn --cluster localhost,server1,server2,server3 --topo tree,4,4</code></p>

    <p><img src="http://mininet.org/images/cluster.png" /></p>
  </li>
</ul>

<p>Note that examples contain experimental features which might
“graduate” into mainline Mininet in the future, but they should
not be considered a stable part of the Mininet API!</p>

<h3 id="how-to-get-it">How to get it</h3>

<p>The easiest way to get started with Mininet is to download a
VM image. See <a href="http://mininet.org/download">http://mininet.org/download</a>
for details.</p>

<p>The latest Mininet source code is available on
<a href="[http://github.com/mininet/mininet">github</a> and also via
<a href="http://code.mininet.org">code.mininet.org</a>.</p>

<p>Additional information on the Mininet 2.2.0 release may be found in the
<a href="http://wiki.mininet.org/Mininet-2.2.0-Release-Notes">release notes</a>
and on <a href="http://docs.mininet.org">docs.mininet.org</a>.</p>

<p>Mininet is an open source project, and we are grateful to our many
code contributors, bug reporters, and active users who continue to
help make Mininet a useful system with a friendly and helpful
community!</p>

<p>Have fun with Mininet!</p>

<p><strong>Mininet 2.2.0 Core Team:</strong> <br />
Bob Lantz, Brian O’Connor, Cody Burkard <br />
Open Networking Laboratory</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minininet Tutorial at SIGCOMM]]></title>
    <link href="http://mininet.org/blog/2014/12/08/mininet-tutorial-at-sigcomm/"/>
    <updated>2014-12-08T12:00:00-08:00</updated>
    <id>http://mininet.org/blog/2014/12/08/mininet-tutorial-at-sigcomm</id>
    <content type="html"><![CDATA[<p>Materials from our tutorial at SIGCOMM 2014,
<a href="http://conferences.sigcomm.org/sigcomm/2014/tutorial-mininet.php">“Teaching Computer Networking with Mininet”</a>, are available on
<a href="http://teaching.mininet.org">teaching.mininet.org</a>.
The original announcement follows.</p>

<hr />

<p><strong>Call for Participation:</strong></p>

<h3 id="mininet-tutorial---teaching-computer-networking-with-mininet">Mininet Tutorial - Teaching Computer Networking with Mininet</h3>

<p><a href="http://conferences.sigcomm.org/sigcomm/2014/tutorial-mininet.php">http://conferences.sigcomm.org/sigcomm/2014/tutorial-mininet.php</a></p>

<p><strong>August 18th, Chicago, USA (in conjunction with SIGCOMM)</strong></p>

<hr />

<h3 id="important-dates">Important Dates</h3>

<ul>
  <li>Early Registration Deadline: July 11th, 11:59pm CDT</li>
  <li>Late Registration: July 12th - August 18th</li>
  <li>Tutorial Date: August 18th 8:30am - 12:00pm</li>
</ul>

<hr />

<h3 id="objective">Objective</h3>

<p>Sharing our experiences using the Mininet network
emulation platform to teach computer networking in a variety of
contexts ranging from small on-campus courses (Stanford, Georgia Tech,
MIT) to massive online courses. We believe that the Mininet platform
can make teaching and learning computer networking more fun and
effective by facilitating experiential learning.</p>

<hr />

<h3 id="program">Program</h3>

<ul>
  <li>Introduce <a href="http://mininet.org">Mininet</a> to the broader network community, including its capabilities and limitations and some example use cases.</li>
  <li>Familiarize attendees with Mininet through hands-on exercises.</li>
  <li>Share our experiences using Mininet since 2011 for on-campus and massive online courses at Stanford, Georgia Tech and MIT.</li>
  <li>Disseminate assignments that we used at our universities and help to develop and expand an online repository of Mininet courseware.</li>
</ul>

<hr />

<h3 id="speakers-and-panelists">Speakers and Panelists</h3>

<ul>
  <li>Bob Lantz - ON.Lab</li>
  <li>Te-Yuan (TY) Huang - Stanford</li>
  <li>Vimalkumar Jeyakumar - Stanford</li>
  <li>Brian O’Connor - ON.Lab</li>
  <li>Nick Feamster - Georgia Tech</li>
  <li>Keith Winstein - MIT</li>
  <li>Anirudh Sivaraman - MIT</li>
</ul>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mininet 2.2.0 Beta]]></title>
    <link href="http://mininet.org/blog/2014/11/12/mininet-2-2-0-beta/"/>
    <updated>2014-11-12T17:49:00-08:00</updated>
    <id>http://mininet.org/blog/2014/11/12/mininet-2-2-0-beta</id>
    <content type="html"><![CDATA[<p>Please see the full <a href="http://mininet.org/blog/2014/12/09/announcing-mininet-2-2-0/">Mininet 2.2.0 Release Announcement</a> !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Announcing Mininet 2.1.0 !]]></title>
    <link href="http://mininet.org/blog/2013/09/20/announcing-mininet-2-1-0/"/>
    <updated>2013-09-20T13:59:00-07:00</updated>
    <id>http://mininet.org/blog/2013/09/20/announcing-mininet-2-1-0</id>
    <content type="html"><![CDATA[<p>We are pleased to announce the immediate availability of Mininet 2.1.0
on <a href="http://mininet.org">mininet.org</a> !</p>

<p><a href="http://mininet.org">Mininet</a> is a network emulation platform that is intended
to be the quickest, easiest, and most enjoyable way to create virtual networks
for research, education, and system development.  By providing an instant
virtual network on your laptop that can run real application, switch, and
controller code, Mininet also makes it convenient to get started with SDN and
OpenFlow without any additional hardware.</p>

<p>Mininet 2.1.0 provides a number of bug fixes as well as
new features, including:</p>

<ul>
  <li>Convenient access to <code>Mininet()</code> as a <strong>dict of nodes</strong></li>
  <li><strong>X11 tunneling</strong> (<code>wireshark</code> in Mininet hosts, finally!)</li>
  <li>Accurate reflection of the <code>Mininet()</code> object in the CLI</li>
  <li>Automatically detecting and adjusting resource limits</li>
  <li><strong>Automatic cleanup</strong> on failure of the <code>mn</code> command</li>
  <li>Support for installing the <strong>OpenFlow 1.3</strong> versions of the reference
user switch and NOX from CPqD and Ericsson</li>
  <li>Preliminary support for running <strong>OVS in user space mode</strong></li>
  <li>Preliminary support (<code>IVSSwitch()</code>) for the <strong>Indigo Virtual Switch</strong></li>
  <li>Preliminary support for <strong>Fedora</strong> in <code>install.sh</code></li>
  <li>A script (<code>util/m</code>) for <strong>easily running new shells or commands in nodes</strong></li>
  <li>The ability to <strong>import modules from <code>mininet.examples</code></strong></li>
</ul>

<p>We have provided several new examples (which can easily be
imported to provide useful functionality) including:</p>

<ul>
  <li>Modeling <strong>separate control and data networks</strong>: <code>mininet.examples.controlnet</code></li>
  <li>Connecting <strong>Mininet hosts to the internet</strong> (or a LAN) using NAT: <code>mininet.examples.nat</code></li>
  <li>Creating <strong>per-host custom directories</strong> using bind mounts: <code>mininet.examples.bind</code></li>
</ul>

<p>Note that examples contain experimental features which might
“graduate” into mainline Mininet in the future, but they should
not be considered a stable part of the Mininet API!</p>

<p>Additional information may be found in the
<a href="https://github.com/mininet/mininet/wiki/Mininet-2.1.0-Release-Notes">Release Notes</a>.</p>

<p>Mininet is an open source project, and we are grateful to our many code
contributors, bug reporters, and active users who continue to help make Mininet
a useful system with a friendly and helpful community!</p>

<p>Have fun with Mininet!</p>

<p><strong>The Mininet 2.1.0 Team</strong><br />
Bob Lantz and Brian O’Connor<br />
Open Networking Laboratory</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nick Feamster's SDN Course]]></title>
    <link href="http://mininet.org/blog/2013/07/11/sdn-course/"/>
    <updated>2013-07-11T17:53:00-07:00</updated>
    <id>http://mininet.org/blog/2013/07/11/sdn-course</id>
    <content type="html"><![CDATA[<p>I just want to put in a recommendation for Nick Feamster’s excellent Software Defined Networking course. It’s free on Coursera, and not only does he do a great job of clearly explaining SDN, network virtualization, and related topics, he has also created some excellent videos explaining the usage, design, and rationale for the Mininet system, which is also being used for programming assignments and labs in the course.</p>

<p>There are also interesting interviews with notable people like Martin Casado, David Clark, and Teemu Koponen. It’s quite excellent, very approachable for anyone who has a basic networking background, and highly recommended:</p>

<p><a href="https://www.coursera.org/course/sdn">https://www.coursera.org/course/sdn</a></p>

<p>The course has already started, but as of today (Thursday July 11th) you can still sign up for it.</p>

<p>-Bob</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automating Controller Startup]]></title>
    <link href="http://mininet.org/blog/2013/06/03/automating-controller-startup/"/>
    <updated>2013-06-03T15:50:00-07:00</updated>
    <id>http://mininet.org/blog/2013/06/03/automating-controller-startup</id>
    <content type="html"><![CDATA[<p>One of Mininet’s key features is that it makes it very easy to create
a complete virtual network including hosts, switches, links and
OpenFlow controllers. By default, Mininet runs Open vSwitch
in OpenFlow mode, which requires an OpenFlow controller.</p>

<p>As you probably know, Mininet comes with built-in Controller() classes to
support several controllers, including the OpenFlow reference controller
(<code>controller</code>), Open vSwitch’s  <code>ovs-controller</code>,
and the now-deprecated NOX Classic.</p>

<p>You can easily choose which one you want when you invoke the <code>mn</code> command:</p>

<pre><code>sudo mn --controller ref
sudo mn --controller ovsc
sudo mn --controller NOX,pyswitch
</code></pre>

<p>Each of the above examples uses a controller which turns your OVS switches
into Ethernet bridges (aka learning switches.)</p>

<p>Note that <code>ovsc</code> is easy to install but only supports 16 switches.
You can install the reference controller (patched to support many switches)
using <code>install.sh -f</code>. (As of this writing, you can also install NOX
Classic using <code>install.sh -x</code>.)</p>

<h2 id="the-manual-way-using-remote-controllers">The manual way: using remote controllers</h2>

<p>But what do you do if you want another controller like POX? Well, one
way is to start up POX (or Beacon, Floodlight, etc.) in another terminal
window and then use <code>--controller remote</code>:</p>

<pre><code>sudo mn --controller remote,ip=127.0.0.1
</code></pre>

<p>If your controller is running locally, you can just use</p>

<pre><code>sudo mn --controller remote
</code></pre>

<p>You might be asking: is there a way for Mininet to automatically start
up my controller so that I don’t have to do it manually? The answer is,
of course, yes!</p>

<h2 id="the-automatic-way-1-using-the-command-line">The automatic way #1: using the command line</h2>

<p>The latest Mininet <code>master</code> branch allows you to change the command and
arguments for <code>--controller ref</code> to invoke another controller as
desired. For example, here’s how you could invoke POX:</p>

<pre><code>sudo mn --controller ref,command='python pox.py',cdir=$HOME/pox,cargs='openflow.of_01 --port=%s forwarding.l2_learning'
</code></pre>

<p>Note the following options:</p>

<p><code>cdir</code>: the directory to change to before invoking the controller</p>

<p><code>command</code>: the command to start your controller</p>

<p><code>cargs</code>: the controller’s arguments (including <code>%s</code> for wherever the controller’s listening port should go)</p>

<h2 id="the-super-automatic-way-2-creating-a-custom-controller-subclass">The super automatic way #2: creating a custom <code>Controller()</code> subclass</h2>

<p>This is much easier than it sounds, and it has worked in Mininet since
version 1.0!</p>

<p>Here is a custom class for POX’s l2_learning:</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">mininet.node</span> <span class="kn">import</span> <span class="n">Controller</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">os</span> <span class="kn">import</span> <span class="n">environ</span>
</span><span class="line">
</span><span class="line"><span class="n">POXDIR</span> <span class="o">=</span> <span class="n">environ</span><span class="p">[</span> <span class="s">&#39;HOME&#39;</span> <span class="p">]</span> <span class="o">+</span> <span class="s">&#39;/pox&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">POX</span><span class="p">(</span> <span class="n">Controller</span> <span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span> <span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">cdir</span><span class="o">=</span><span class="n">POXDIR</span><span class="p">,</span>
</span><span class="line">                  <span class="n">command</span><span class="o">=</span><span class="s">&#39;python pox.py&#39;</span><span class="p">,</span>
</span><span class="line">                  <span class="n">cargs</span><span class="o">=</span><span class="p">(</span> <span class="s">&#39;openflow.of_01 --port=</span><span class="si">%s</span><span class="s"> &#39;</span>
</span><span class="line">                          <span class="s">&#39;forwarding.l2_learning&#39;</span> <span class="p">),</span>
</span><span class="line">                  <span class="o">**</span><span class="n">kwargs</span> <span class="p">):</span>
</span><span class="line">        <span class="n">Controller</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span> <span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">cdir</span><span class="o">=</span><span class="n">cdir</span><span class="p">,</span>
</span><span class="line">                             <span class="n">command</span><span class="o">=</span><span class="n">command</span><span class="p">,</span>
</span><span class="line">                             <span class="n">cargs</span><span class="o">=</span><span class="n">cargs</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span> <span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">controllers</span><span class="o">=</span><span class="p">{</span> <span class="s">&#39;pox&#39;</span><span class="p">:</span> <span class="n">POX</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>With this class saved into <code>pox.py</code>, you can now do the following:</p>

<pre><code>sudo mn --custom pox.py --controller pox
</code></pre>

<p>Additionally you can use the custom class in your Mininet scripts:</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c">#!/usr/bin/python</span>
</span><span class="line">
</span><span class="line"><span class="kn">from</span> <span class="nn">mininet.log</span> <span class="kn">import</span> <span class="n">setLogLevel</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">mininet.net</span> <span class="kn">import</span> <span class="n">Mininet</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">mininet.topolib</span> <span class="kn">import</span> <span class="n">TreeTopo</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">mininet.cli</span> <span class="kn">import</span> <span class="n">CLI</span>
</span><span class="line">
</span><span class="line"><span class="c"># We assume you are in the same directory as pox.py</span>
</span><span class="line"><span class="c"># or that it is loadable via PYTHONPATH</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">pox</span> <span class="kn">import</span> <span class="n">POX</span>
</span><span class="line">
</span><span class="line"><span class="n">setLogLevel</span><span class="p">(</span> <span class="s">&#39;info&#39;</span> <span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">net</span> <span class="o">=</span> <span class="n">Mininet</span><span class="p">(</span> <span class="n">topo</span><span class="o">=</span><span class="n">TreeTopo</span><span class="p">(</span> <span class="n">depth</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">fanout</span><span class="o">=</span><span class="mi">2</span> <span class="p">),</span>
</span><span class="line">               <span class="n">controller</span><span class="o">=</span><span class="n">POX</span> <span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">net</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
</span><span class="line"><span class="n">CLI</span><span class="p">(</span> <span class="n">net</span> <span class="p">)</span>
</span><span class="line"><span class="n">net</span><span class="o">.</span><span class="n">stop</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>

<p>Note that in this custom class we’ve simply changed
<code>__init__</code>, but in a more complicated example you might
wish to change the <code>start()</code> and <code>stop()</code> methods as
well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mininet at CoNEXT 2012]]></title>
    <link href="http://mininet.org/blog/2012/12/06/mininet-at-conext-2012/"/>
    <updated>2012-12-06T15:20:00-08:00</updated>
    <id>http://mininet.org/blog/2012/12/06/mininet-at-conext-2012</id>
    <content type="html"><![CDATA[<p>We’re going to France. No, really!</p>

<p>Join us next week, December 10th to 13th at
the <a href="http://conferences.sigcomm.org/co-next/2012/program.html">ACM Conference on Network EXperiments and Technologies, CoNEXT 2012</a>,
where Brandon will be presenting our “runnable” paper on Mininet 2.0 “HiFi”:</p>

<p><a href="http://conferences.sigcomm.org/co-next/2012/eproceedings/conext/p253.pdf"><em>Reproducible Network Experiments using Container-Based Emulation</em></a></p>

<p>We look forward to meeting many current, new, and future Mininet users,
developers, researchers and contributors!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Announcing Mininet 2.0.0]]></title>
    <link href="http://mininet.org/blog/2012/11/27/announcing-mininet-2-dot-0-0/"/>
    <updated>2012-11-27T17:41:00-08:00</updated>
    <id>http://mininet.org/blog/2012/11/27/announcing-mininet-2-dot-0-0</id>
    <content type="html"><![CDATA[<p>We are pleased to announce the availability of <a href="http://mininet.org/download">Mininet 2.0.0</a>!</p>

<p>In the last few years, the Mininet community has grown from a few users at Stanford to an active mailing list with over 500 members in academia, startups, and industry.</p>

<p>Version 2 (“HiFi”) is a major upgrade that expands Mininet’s scope from functional testing (“does my network control plane work?”) to performance testing (“how well does my custom congestion control perform with 10 Mb/s links?”).  New APIs now allow you to create links with specified bandwidths, latencies and loss rates, and to limit the CPU usage of virtual hosts. Using these new features, 37 students in Stanford University’s Advanced Topics in Networking course (CS244) replicated 16 published research experiments; you’re encouraged to browse their stories at <a href="http://reproducingnetworkresearch.wordpress.com/">The Reproducing Network Research Blog</a>.</p>

<p>Other new features of Mininet 2.0.0 include:</p>

<ul>
  <li>An all-new website, <a href="http://mininet.github.com">http://mininet.github.com</a>, with <a href="http://mininet.org/api">online doxypy documentation</a> for all classes.</li>
  <li>More flexible <code>mn</code> command line options, including the ability to specify NOX (and, in the future, POX) modules from the <code>mn</code> command line, and the ability to set link and CPU bandwidth limits</li>
  <li>Dynamic link reconnection in OVS (supports migration and mobility emulation)</li>
  <li>First-class abstractions/classes for link (<code>Link</code>) and interface (<code>Intf</code>) objects</li>
  <li>Interface/link bandwidth limiting support using <code>tc</code>, via <code>TCIntf</code> and <code>TCLink</code> classes</li>
  <li>CPU bandwidth limiting supporting both CFS bandwidth limiting and POSIX real-time scheduling, via the CPULimitedHost class</li>
  <li>Easier task execution on virtual hosts via the <code>Host.Popen()</code> interface, implemented in <code>mnexec</code> using the <code>setns</code> system call</li>
  <li>Easier and faster native installations that can use the latest Open vSwitch packages.</li>
</ul>

<p>Note that the <code>Topo</code> object has changed somewhat to enable more flexible topology params, and as a result, your old code may need a few changes.</p>

<p>Download and installation instructions are available at <a href="http://mininet.github.com/download">http://mininet.github.com/download</a> and Mininet source code may be found at <a href="https://github.com/mininet/mininet">https://github.com/mininet/mininet</a>. We welcome new feature implementations, bug fixes, bug reports, FAQ additions and other contributions, and we look forward to high-quality discussions on <a href="https://mailman.stanford.edu/mailman/listinfo/mininet-discuss"><code>mininet-discuss</code></a>.</p>

<p>Thanks to all the code contributors, bug reporters, and active users who helped make this release possible!</p>

<p>The Mininet Team</p>

<ul>
  <li>Bob Lantz</li>
  <li>Brandon Heller</li>
  <li>Nikhil Handigol</li>
  <li>Vimalkumar Jeyakumar</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Website Updated]]></title>
    <link href="http://mininet.org/blog/2012/08/23/website-updated/"/>
    <updated>2012-08-23T18:08:00-07:00</updated>
    <id>http://mininet.org/blog/2012/08/23/website-updated</id>
    <content type="html"><![CDATA[<p>The old website had an obscure, needed-Google-to-find-it address, and was generated server-side, so it could be a bit slow.  The new page you’re seeing was built with Octopress and is hosted on GitHub Pages.  Since it’s all statically generated pages now, it should load super-quick, and it’ll be easier to add blog entries and do page customization.</p>

<p>Try it out, and let us know what you think!</p>

<p>-The Mininet Team</p>

<p><em>[Ed.: Apologies for use of the dubious term “website,” rather than the perfectly adequate “web site.”
  Perhaps you found us via Google or your favorite “searchsite.”]</em></p>
]]></content>
  </entry>
  
</feed>
